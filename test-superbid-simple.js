#!/usr/bin/env node

/**
 * Script simples para testar o SuperbidHybridScraper
 * Executa diretamente o scraper sem depend√™ncias do sistema completo
 */

console.log('üöÄ [TEST SIMPLE] Iniciando teste do SuperbidHybridScraper...');
console.log('üìÖ [TEST SIMPLE] Data:', new Date().toISOString());

// Simular o ambiente necess√°rio
process.env.NODE_ENV = 'production';
process.env.NEXT_PUBLIC_SUPABASE_URL = process.env.SUPABASE_URL || 'https://placeholder.supabase.co';
process.env.SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY || 'placeholder-key';

async function testSuperbid() {
  try {
    console.log('üì¶ [TEST SIMPLE] Importando scraper...');
    
    // Importar o scraper (assumindo que est√° compilado)
    const { SuperbidHybridScraper } = await import('./dist/lib/scraping/scrapers/superbid-hybrid.js');
    
    console.log('‚úÖ [TEST SIMPLE] Scraper importado com sucesso');
    
    const scraper = new SuperbidHybridScraper();
    console.log('‚úÖ [TEST SIMPLE] Scraper instanciado');
    
    console.log('üï∑Ô∏è  [TEST SIMPLE] Iniciando scraping...');
    const vehicles = await scraper.run();
    
    console.log('‚úÖ [TEST SIMPLE] Scraping conclu√≠do!');
    console.log('üìä [TEST SIMPLE] Ve√≠culos encontrados:', vehicles.length);
    
    if (vehicles.length > 0) {
      console.log('üöó [TEST SIMPLE] Primeiros ve√≠culos:');
      vehicles.slice(0, 3).forEach((vehicle, index) => {
        console.log(`  ${index + 1}. ${vehicle.title}`);
        console.log(`     Pre√ßo: R$ ${vehicle.current_bid || 'N/A'}`);
        console.log(`     Link: ${vehicle.original_url || 'N/A'}`);
        console.log(`     Imagem: ${vehicle.thumbnail_url || 'N/A'}`);
      });
    } else {
      console.log('‚ùå [TEST SIMPLE] Nenhum ve√≠culo encontrado');
      console.log('üîç [TEST SIMPLE] Verifique os logs acima para debug');
    }
    
  } catch (error) {
    console.error('‚ùå [TEST SIMPLE] Erro durante o teste:', error);
    console.error('üìã [TEST SIMPLE] Stack trace:', error.stack);
    
    // Tentar importar diretamente do TypeScript
    try {
      console.log('üîÑ [TEST SIMPLE] Tentando importar do TypeScript...');
      const { SuperbidHybridScraper } = await import('./src/lib/scraping/scrapers/superbid-hybrid.ts');
      
      const scraper = new SuperbidHybridScraper();
      const vehicles = await scraper.run();
      
      console.log('‚úÖ [TEST SIMPLE] Scraping via TypeScript conclu√≠do!');
      console.log('üìä [TEST SIMPLE] Ve√≠culos encontrados:', vehicles.length);
      
    } catch (tsError) {
      console.error('‚ùå [TEST SIMPLE] Erro com TypeScript:', tsError);
    }
  }
}

testSuperbid();
